import matplotlib.pyplot as plt
import seaborn as sns
import pandas as pd
from sklearn.model_selection import GridSearchCV

#for now on matplotlib 
#accuracy plot for tracking metrics


def plot_grid_search_results(grid_search):
    """
    Function creates the plots for the results from GridSearch.

    Parameters:
    - grid_search: GridSearchCV object containing results

    """
    # Extracting the results into a DataFrame
    results = pd.DataFrame(grid_search.cv_results_)

    # Creating a pivot table for heatmap
    pivot_table = results.pivot("param_C", "param_gamma", "mean_test_score")

    plt.figure(figsize=(10, 6))
    sns.heatmap(pivot_table, annot=True, fmt=".3f", cmap="viridis")
    plt.title("Grid Search Mean Test Scores")
    plt.xlabel("Gamma")
    plt.ylabel("C")
    plt.xticks(rotation=45)
    plt.yticks(rotation=0)
    plt.colorbar(label='Mean Test Score (Accuracy)')
    plt.show()

# Added outside the function  - after fitting your model with grid_search in train_svm_classifier
model, indep_df_test, y_df_test = train_svm_classifier(indep_df, y_df)
plot_grid_search_results(grid_search)



#alternative option with plotly - an interactive plot:)

import plotly.express as px
import pandas as pd

def plot_grid_search_results(grid_search):
    """
    Function creates the plots for the results from GridSearch.

    Parameters:
    - grid_search: GridSearchCV object containing results
    """
    # Extracting the results into a DataFrame
    results = pd.DataFrame(grid_search.cv_results_)

    # Creating a pivot table for heatmap
    pivot_table = results.pivot("param_C", "param_gamma", "mean_test_score")

    # Creating the heatmap using Plotly
    fig = px.imshow(
        pivot_table,
        labels=dict(x="Gamma", y="C", color="Mean Test Score (Accuracy)"),
        x=pivot_table.columns,
        y=pivot_table.index,
        color_continuous_scale='Viridis',
        title="Grid Search Mean Test Scores"
    )

    # Show the figure
    fig.show()

# recalling the function
plot_grid_search_results(grid_search)

